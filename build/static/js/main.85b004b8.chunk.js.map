{"version":3,"sources":["components/Person.js","services/phonebook.js","components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","components/ErrorNotification.js","App.js","serviceWorker.js","index.js"],"names":["Person","person","deletePerson","key","name","number","onClick","baseUrl","axios","get","then","response","data","newPerson","post","id","newObject","put","delete","Persons","persons","searchName","setPersons","personas","filter","toLowerCase","includes","map","thePerson","find","peeps","window","confirm","phoneBookService","people","catch","error","alert","deleteAPerson","Filter","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNo","handleNoChange","onSubmit","type","Notification","message","undefined","className","ErrorNotification","App","useState","setNewName","setNewNo","setSearchName","errorMessage","setErrorMessage","setMessage","useEffect","event","target","preventDefault","alreadyAdded","concat","console","log","setTimeout","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85b004b8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, deletePerson }) => {\r\n    return (\r\n      <p key={person.name}>\r\n        {person.name} {person.number}\r\n        <button onClick={deletePerson}>Delete</button>\r\n      </p>\r\n    )\r\n  }\r\n\r\n  export default Person;","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }\r\n","import React, { useState, useEffect } from 'react'\r\nimport Person from './Person'\r\nimport phoneBookService from '../services/phonebook'\r\n\r\nconst Persons = ({ persons, searchName, setPersons }) => {\r\n  let personas = persons;\r\n\r\n  if (searchName !== '') {\r\n    personas = persons.filter(\r\n      person => person.name.toLowerCase().includes(searchName.toLowerCase()));\r\n  }\r\n\r\n  // console.log('personas', personas)\r\n  // console.log('persons', persons)\r\n  const deleteAPerson = (id) => {\r\n    const thePerson = personas.find(person => person.id === id)\r\n    const peeps = persons.filter(person => person.id !== id)\r\n\r\n    if (window.confirm(`Delete ${thePerson.name}?`)) {\r\n      phoneBookService\r\n        .deletePerson(id)\r\n        .then(people => {\r\n          setPersons(peeps)\r\n        })\r\n        .catch(error => {\r\n          alert(\r\n            `the person '${thePerson}' was already deleted from server`\r\n          )\r\n          setPersons(peeps)\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    personas.map(person =>\r\n      <Person key={person.name} person={person} deletePerson={() => deleteAPerson(person.id)} />\r\n    )\r\n  )\r\n}\r\n\r\nexport default Persons;","import React from 'react'\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n      <div>\r\n        filter shown with <input value={value} onChange={onChange} />\r\n      </div>)\r\n  }\r\n\r\n  export default Filter;","import React from 'react'\r\n\r\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNo, handleNoChange }) => {\r\n    return (\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNo} onChange={handleNoChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">\r\n            add\r\n        </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  export default PersonForm;","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null || message === '' || message === undefined) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"success\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification;","import React from 'react'\r\n\r\nconst ErrorNotification = ({ message }) => {\r\n  if (message === null || message === '' || message === undefined) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorNotification;","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport ErrorNotification from './components/ErrorNotification'\nimport phoneBookService from './services/phonebook'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNo, setNewNo] = useState('')\n  const [searchName, setSearchName] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [message, setMessage] = useState('')\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const newPerson = {\n      name: newName,\n      number: newNo\n    }\n\n    const containsPerson = (persons.find(person => person.name.toLowerCase() === newName.toLowerCase()) !== undefined)\n    // console.log('Contains or not', containsPerson)\n\n    if (containsPerson) {\n      if (window.confirm(`'${newName}' is already added to phonebook, replace the old number with a new one?`)) {\n        const alreadyAdded = (persons.filter(person => person.name.toLowerCase() === newName.toLowerCase()))\n        // console.log('Already', alreadyAdded)\n        // console.log('newPerson', newPerson)\n        const people = (persons.filter(person => person.name.toLowerCase() !== newName.toLowerCase()))\n        phoneBookService\n          .update(alreadyAdded[0].id, newPerson)\n          .then(newPerson => {\n            setPersons(people.concat(newPerson))\n            setNewName('')\n            setNewNo('')\n\n            setMessage(\n              `Updated ${newPerson.name}`\n            )\n            setErrorMessage('')\n          })\n          .catch(error => {\n            console.log('Error', error)\n            setErrorMessage(error.response.data.error)\n            setMessage('')\n          })\n\n        setTimeout(() => {\n          setErrorMessage(null)\n          setMessage(null)\n        }, 5000)\n      }\n    } else {\n\n      phoneBookService\n        .create(newPerson)\n        .then(newPerson => {\n          console.log('New Person', newPerson)\n          setPersons(persons.concat(newPerson))\n          setNewName('')\n          setNewNo('')\n          setMessage(\n            `Added ${newPerson.name}`\n          )\n          setErrorMessage('')\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setErrorMessage(error.response.data.error)\n          setMessage('')\n        })\n\n      setTimeout(() => {\n        setErrorMessage(null)\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNoChange = (event) => {\n    setNewNo(event.target.value)\n  }\n\n  const handleSearchedNameChange = (event) => {\n    setSearchName(event.target.value)\n  }\n\n  // initial state of the data is fetched from the server using the axios-library\n  useEffect(() => {\n    phoneBookService\n      .getAll()\n      .then(people => {\n        setPersons(people)\n      })\n  }, [])\n\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ErrorNotification message={errorMessage} />\n      <Notification message={message} />\n      <Filter\n        value={searchName}\n        onChange={handleSearchedNameChange}\n      />\n      <h2>add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNo={newNo}\n        handleNoChange={handleNoChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        key={persons}\n        persons={persons}\n        searchName={searchName}\n        setPersons={setPersons}\n      />\n    </>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}